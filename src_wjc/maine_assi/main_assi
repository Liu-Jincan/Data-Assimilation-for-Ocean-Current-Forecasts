#!/bin/sh
#############################################################################
#############################################################################


cd /home/wjc/wjc_work/zhanlue_tongdao/maine_assi/

# 0. Preparations -----------------------------------------------------------

  set -e

# 0.a Define model input

   wind='mywind1'           # 0.25 degree ECMWF wind data to be used
#  wind='no'               # run models without wind
#  ice='icean_5m'         # 5 min ice analyses to be used by all grids
   ice='no'               # run models without ice

# 0.b Define model grids

   mods='grd1'
   windname='mywind.nc'

   NR=`echo $mods | wc -w | awk '{print $1}'`

# 0.c Set initial conditions

# itype=1 ; Hini='10.0'    # Set initial swell
 itype=3                  # Initialize by wind
#  itype=5                  # Start from calm conditions

# 0.d Set output
  FIELDS='DPT WND HS T02 DIR FP DP'
##-------水深,风速,波高,均值周期,均值波向,峰值周期,峰值波向

# 0.e Set run times

  t_beg='20190101 000000' ; t_end='20190130 230000' ; t_rst='20190107 090000' 
  dt='3600' ;    tn='25'

#     undefined t_rst will give no restart file
  if [ -z "$t_rst" ]
  then
    dte='   0'
    t_rst=$t_end
  else
    dte='   1'
  fi

   fstID=`echo $t_beg | sed 's/ /\./g'`
   rstID=`echo $t_rst | sed 's/ /\./g'`

# 0.f Parallel environment 

    MPI='yes'              # run ww3_multi in MPI mode
    proc=4

# 0.g Set-up variables

  case_dir=`pwd`
#  ww3_dir=`echo $case_dir | sed 's/\/cases\/*//g'`
 
  path_c="$case_dir"
  path_w="$path_c/work"             # work directory
  path_i="$path_c/input"   # input data directory
  path_o="$path_c/output" # path for output files
  path_e="/home/wjc/WW3_607/exe"

# 0.h Clean-up

  rm -rf $path_w
  rm -rf $path_o

  mkdir -p $path_w
  mkdir -p $path_o
  cd $path_w

  echo ' ' ; echo ' '
  echo '                  ======> TEST RUN WAVEWATCH III <====== '
  echo '                    ==================================   '
  echo ' '

# 1. Grid pre-processor -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|  Grid preprocessor |'
  echo '+--------------------+'
  echo ' '

  rm -f mod_def.*

  cp $path_i/ww3_grid.inp .
  cp $path_i/*.bot .
  cp $path_i/*.obst .
  cp $path_i/*.mask_nobound .
 

  for mod in $mods
  do
    if [ "$mod" != 'no' ]
    then
       if [ -f $path_i/mod_def.$fstID ]
       then
          echo "   initial grid from $path_i/mod_def.$fstID"
          rm -f mod_def.ww3
          ln -sf $path_i/mod_def.$fstID mode_def.ww3
       else
         echo "   Screen ouput routed to $path_o/ww3_grid.out"
         $path_e/ww3_grid > $path_o/ww3_grid.out
       fi      
    fi
  done

#  rm -f *.bot *.obs *.mask ww3_grid.inp.*

# 2. Initial conditions -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Initial conditions |'
  echo '+--------------------+'
  echo ' '

# Compile appropriate code 

cat > ww3_strt.inp << EOF
$ WAVEWATCH III Initial conditions input file
$ -------------------------------------------
  $itype
EOF

  for grid in $mods
  do
    if [ -f $path_i/restart.$fstID ]
    then
      echo "   initial conditions from $path_i/restart.$fstID"
      rm -f restart.ww3
      ln -sf $path_i/restart.$fstID restart.ww3
    else
#      rm -f mod_def.ww3
#      ln -s mod_def.$grid mod_def.ww3
      echo "   Running ww3_strt for initial conditions"
      echo "   Screen ouput routed to $path_o/ww3_strt.out"
      $path_e/ww3_strt > $path_o/ww3_strt.out
#      mv restart.ww3 restart.$grid
    fi
  done

#  rm -f ww3_strt.inp mod_def.ww3

# 3. Input fields -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Input data         |'
  echo '+--------------------+'
  echo ' '

# Compile appropriate code 
 
 # 3. Input fields ------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Input data         |'
  echo '+--------------------+'
  echo ' '
 cp $path_i/$windname . 

cat > ww3_prnc.inp << EOF
$ WAVEWATCH III Field preprocessor input file
$ -------------------------------------------
   'WND' 'LL' T T
$
$ Name of spatial dimensions------------------------------------------ $
$ NB: time dimension is expected to be called 'time'
$
 lon lat
$
$ Variables to use --------------------------------------------------- $
$
  windu windv
$
$ Additional time input ---------------------------------------------- $
$ If time flag is .FALSE., give time of field in yyyymmdd hhmmss format.
$
$   19680606 053000
$
$ Define data files -------------------------------------------------- $
$ The input line identifies the filename using for the forcing field.
$
  '$windname'
$
$ -------------------------------------------------------------------- $
EOF

  echo "   Screen ouput routed to  ww3_prnc.out"
  $path_e/ww3_prnc >  $path_o/ww3_prnc.out

#  echo "   Copy wind.ww3 to $path_i"
#  cp wind.ww3 $path_i/.

  rm -f $windname
 
# 4. Main program -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Main program    |'
  echo '+--------------------+'
  echo ' '

cat > ww3_shel.inp << EOF
$ -------------------------------------------------------------------- $
$ WAVEWATCH III shell input file                                       $
$ -------------------------------------------------------------------- $
   F T     Water levels
   F T     Currents
   T F     Winds
   F       Ice concentrations
   F       Assimilation data : Mean parameters
   F       Assimilation data : 1-D spectra
   F       Assimilation data : 2-D spectra.
$ Time frame of calculations ----------------------------------------- $
$ - Starting time in yyyymmdd hhmmss format.
$ - Ending time in yyyymmdd hhmmss format.
   $t_beg
   $t_end  
$
   1
$
   $t_beg  $dt  $t_end
   N
   $FIELDS
   $t_beg      $dt  $t_end
$
   290.642 43.715 'p44032' 
   290.872 43.204 'p44005'
   292.117 43.484 'p44037'   
   291.000 44.060 'p44033'
   290.753 40.502 'p44008'
   289.856 43.531 'p44007'
   289.349 42.346 'p44013'
   290.370 42.126 'p44018'
   292.686 44.273 'p44027'
   295.980 42.500 'p44150'
   293.400 41.105 'p44011'
$ 
  0.0   0.0  'STOPSTRING'
   $t_beg      0  $t_end
   $t_rst      1  $t_rst
   $t_beg      0  $t_end
   $t_beg      0  $t_end
$
   'LEV' 20080301 000000    0.0
   'CUR' 20080301  000000    0.0    0.
$    'WND'  20080101 000000    10.    145.    2
$    'MOV' 20080802 000000    4.0    25.
     'STP'
$ -------------------------------------------------------------------- $
$ End of input file                                                    $
$ -------------------------------------------------------------------- $
EOF


  if [ "$MPI" = 'yes' ]
  then
    mpirun -np $proc $path_e/ww3_shel
  else
    $path_e/ww3_shel
  fi


  echo "   Running  model ..."

  for grid in $mods
  do
    if [ -f restart001.ww3 ]
    then
      echo "   Output file restart.ww3 routed to"
      echo "      $path_i/restart.$rstID"
      mv restart001.ww3 $path_i/restart.$rstID
    fi
  done

  echo "   Log files routed to $path_o"
  mv log.* $path_o/.

#  rm -f ww3_multi.inp
  rm -f restart.*
  rm -f wind.*
  rm -f ice.*

 

# 5. Point output -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Point output    |'
  echo '+--------------------+'
  echo ' '
cat > ww3_outp.inp << EOF
$ WAVEWATCH III Grid output post-processing
$ -----------------------------------------
  $t_beg  $dt  1000
$
$
  1
$
  -1
$  
  2
  2 33
EOF

  echo "   Screen ouput routed to  ww3_outp.out"
  $path_e/ww3_outp >  ww3_outp.out
  mv tab33.ww3  $path_o/.

# 6. save output raw data---------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|save output raw data|'
  echo '+--------------------+'
  echo ' '
 
 rm -f $path_i/mod_def.ww3
 mv mod_def.ww3 $path_o/mod_def.$rstID
 mv out_grd.ww3 $path_o/out_grd.$rstID
 mv out_pnt.ww3 $path_o/out_pnt.$rstID
 

# 7. End, cleaning up -------------------------------------------------------

  echo ' ' ; echo "Cleaning-up `pwd`"
  rm -f mod_def.* log.* wind.*

 
  echo ' ' ; echo ' '
  echo '                  ======>  END OF WAVEWATCH III  <====== '
  echo '                    ==================================   '
  echo ' '

# End of ***** -------------------------------------------------------
